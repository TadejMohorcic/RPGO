f = @(x,y) 3*(1-x).^2.*exp(-x.^2 - (y+1).^2) ...
- 10*(x/5 - x.^3 - y.^5).*exp(-x.^2-y.^2) ...
- 1/3*exp(-(x+1).^2 - y.^2);


dxf = @(x,y) (exp(-(x + 1)^2 - y^2)*(2*x + 2))/3 ...
+ 3*exp(- (y + 1)^2 - x^2)*(2*x - 2) ...
+ exp(- x^2 - y^2)*(30*x^2 - 2) ...
- 6*x*exp(- (y + 1)^2 - x^2)*(x - 1)^2 ...
- 2*x*exp(- x^2 - y^2)*(10*x^3 - 2*x + 10*y^5);

dyf = @(x,y) (2*y*exp(- (x + 1)^2 - y^2))/3 ...
+ 50*y^4*exp(- x^2 - y^2) ...
- 3*exp(- (y + 1)^2 - x^2)*(2*y + 2)*(x - 1)^2 ...
- 2*y*exp(- x^2 - y^2)*(10*x^3 - 2*x + 10*y^5);

Df = @(x,y) [dxf(x,y); dyf(x,y)];


dxxf = @(x,y) (2*exp(- (x + 1)^2 - y^2))/3 ...
+ 6*exp(- (y + 1)^2 - x^2) ...
+ 60*x*exp(- x^2 - y^2) ...
- 6*exp(- (y + 1)^2 - x^2)*(x - 1)^2 ...
- 2*exp(- x^2 - y^2)*(10*x^3 - 2*x + 10*y^5) ...
- (exp(- (x + 1)^2 - y^2)*(2*x + 2)^2)/3 ...
+ 12*x^2*exp(- (y + 1)^2 - x^2)*(x - 1)^2 ...
+ 4*x^2*exp(- x^2 - y^2)*(10*x^3 - 2*x + 10*y^5) ...
- 12*x*exp(- (y + 1)^2 - x^2)*(2*x - 2) ...
- 4*x*exp(- x^2 - y^2)*(30*x^2 - 2);

dxyf = @(x,y) 4*x*y*exp(- x^2 - y^2)*(10*x^3 - 2*x + 10*y^5) ...
- (2*y*exp(- (x + 1)^2 - y^2)*(2*x + 2))/3 ...
- 2*y*exp(- x^2 - y^2)*(30*x^2 - 2) ...
- 100*x*y^4*exp(- x^2 - y^2) ...
- 3*exp(- (y + 1)^2 - x^2)*(2*x - 2)*(2*y + 2) ...
+ 6*x*exp(- (y + 1)^2 - x^2)*(2*y + 2)*(x - 1)^2;

dyyf = @(x,y) (2*exp(- (x + 1)^2 - y^2))/3 ...
- 6*exp(- (y + 1)^2 - x^2)*(x - 1)^2 ...
- 2*exp(- x^2 - y^2)*(10*x^3 - 2*x + 10*y^5) ...
+ 200*y^3*exp(- x^2 - y^2) ...
- 200*y^5*exp(- x^2 - y^2) ...
- (4*y^2*exp(- (x + 1)^2 - y^2))/3 ...
+ 4*y^2*exp(- x^2 - y^2)*(10*x^3 - 2*x + 10*y^5) ...
+ 3*exp(- (y + 1)^2 - x^2)*(2*y + 2)^2*(x - 1)^2;

Hf = @(x,y) [dxxf(x,y) dxyf(x,y); dxyf(x,y) dyyf(x,y)];


X = [-3.0; -3.0; -3.0; -3.0; -1.7; -1.6; -1.5; -1.1; -0.9; ...
-0.7; -0.5; -0.5; -0.5; -0.4; 0.0; 0.5; 0.5; 0.6; 0.7; ...
1.0; 1.2; 1.2; 1.6; 2.0; 2.0; 3.0; 3.0; 3.0; 3.0; 3.0];

Y = [-3.0; -2.0; 1.0; 3.0; -1.0; 0.5; 1.7; -3.0; -2.0; 1.0; ...
-1.0; 0.0; 3.0; 1.6; -2.0; -1.0; 0.5; 1.2; -0.4; 2.2; ...
-3.0; -1.6; 3.0; -1.0; 0.6; -3.0; -1.8; -0.4; 1.7; 3.0];

TRI = delaunay(X,Y);
tri = triangulation(TRI,X,Y);

S = argyrisspline(tri,f,Df,Hf);

S{1}
S{2}
S{3}
S{12}
S{15}

% izračun vrednosti zlepka nad mrežo točk
N = 101;
[X,Y] = meshgrid(linspace(-3,3,N));
[txy,U] = pointLocation(tri,[X(:) Y(:)]);
SXY = zeros(N);
k = 1;
for i = 1:N
    for j = 1:N
        SXY(j,i) = blossom3(S{txy(k)},repmat(U(k,:),5,1));
        k = k+1;
    end
end

% maksimalna absolutna napaka
max(max(abs(f(X,Y)-SXY)))

% izris
triplot(tri, 'Color','k');
surf(X,Y,SXY);
